{"ast":null,"code":"var _jsxFileName = \"/Users/nsegaran2/Desktop/ASES Website/src/components/TypingText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingText = ({\n  words,\n  noDelete,\n  textStyle\n}) => {\n  _s();\n  const [displayText, setDisplayText] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Get the current word from the array\n  const currentWord = words[wordIndex];\n  useEffect(() => {\n    const typingSpeed = 100; // Adjust typing speed in milliseconds\n    const deleteSpeed = 100; // Adjust deleting speed in milliseconds\n    const delay = isDeleting ? deleteSpeed : typingSpeed;\n    const timeoutId = setTimeout(() => {\n      if (isDeleting && !noDelete) {\n        setDisplayText(prevText => prevText.slice(0, -1));\n        if (displayText === \"\") {\n          setIsDeleting(false);\n          setWordIndex(prevIndex => (prevIndex + 1) % words.length);\n        }\n      } else {\n        setDisplayText(prevText => currentWord.slice(0, prevText.length + 1));\n        if (displayText === currentWord) {\n          setIsDeleting(true);\n        }\n      }\n    }, delay);\n    return () => clearTimeout(timeoutId);\n  }, [displayText, isDeleting, currentWord, words, noDelete]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        textStyle\n      },\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingText, \"seVeyjJpJmEEwFHxqO6dqF3vVnI=\");\n_c = TypingText;\nexport default TypingText;\nvar _c;\n$RefreshReg$(_c, \"TypingText\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Box","jsxDEV","_jsxDEV","TypingText","words","noDelete","textStyle","_s","displayText","setDisplayText","wordIndex","setWordIndex","isDeleting","setIsDeleting","currentWord","typingSpeed","deleteSpeed","delay","timeoutId","setTimeout","prevText","slice","prevIndex","length","clearTimeout","textAlign","children","sx","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nsegaran2/Desktop/ASES Website/src/components/TypingText.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst TypingText = ({ words, noDelete, textStyle }) => {\n  const [displayText, setDisplayText] = useState(\"\");\n  const [wordIndex, setWordIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Get the current word from the array\n  const currentWord = words[wordIndex];\n\n  useEffect(() => {\n    const typingSpeed = 100; // Adjust typing speed in milliseconds\n    const deleteSpeed = 100; // Adjust deleting speed in milliseconds\n    const delay = isDeleting ? deleteSpeed : typingSpeed;\n\n    const timeoutId = setTimeout(() => {\n      if (isDeleting && !noDelete) {\n        setDisplayText((prevText) => prevText.slice(0, -1));\n        if (displayText === \"\") {\n          setIsDeleting(false);\n          setWordIndex((prevIndex) => (prevIndex + 1) % words.length);\n        }\n      } else {\n        setDisplayText((prevText) => currentWord.slice(0, prevText.length + 1));\n        if (displayText === currentWord) {\n          setIsDeleting(true);\n        }\n      }\n    }, delay);\n\n    return () => clearTimeout(timeoutId);\n  }, [displayText, isDeleting, currentWord, words, noDelete]);\n\n  return (\n    <Box textAlign=\"center\">\n      <Typography sx={{textStyle}}>\n        {displayText}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default TypingText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMiB,WAAW,GAAGV,KAAK,CAACM,SAAS,CAAC;EAEpCZ,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAG,GAAG,CAAC,CAAC;IACzB,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;IACzB,MAAMC,KAAK,GAAGL,UAAU,GAAGI,WAAW,GAAGD,WAAW;IAEpD,MAAMG,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjC,IAAIP,UAAU,IAAI,CAACP,QAAQ,EAAE;QAC3BI,cAAc,CAAEW,QAAQ,IAAKA,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACnD,IAAIb,WAAW,KAAK,EAAE,EAAE;UACtBK,aAAa,CAAC,KAAK,CAAC;UACpBF,YAAY,CAAEW,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIlB,KAAK,CAACmB,MAAM,CAAC;QAC7D;MACF,CAAC,MAAM;QACLd,cAAc,CAAEW,QAAQ,IAAKN,WAAW,CAACO,KAAK,CAAC,CAAC,EAAED,QAAQ,CAACG,MAAM,GAAG,CAAC,CAAC,CAAC;QACvE,IAAIf,WAAW,KAAKM,WAAW,EAAE;UAC/BD,aAAa,CAAC,IAAI,CAAC;QACrB;MACF;IACF,CAAC,EAAEI,KAAK,CAAC;IAET,OAAO,MAAMO,YAAY,CAACN,SAAS,CAAC;EACtC,CAAC,EAAE,CAACV,WAAW,EAAEI,UAAU,EAAEE,WAAW,EAAEV,KAAK,EAAEC,QAAQ,CAAC,CAAC;EAE3D,oBACEH,OAAA,CAACF,GAAG;IAACyB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBxB,OAAA,CAACH,UAAU;MAAC4B,EAAE,EAAE;QAACrB;MAAS,CAAE;MAAAoB,QAAA,EACzBlB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtCIJ,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}