{"ast":null,"code":"var _jsxFileName = \"/Users/emmythamakaison/Documents/ASES-Website/src/components/ProfileCard.jsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport CardMedia from '@mui/material/CardMedia';\nimport Card from '@mui/material/Card';\nimport { styled } from '@mui/material/styles';\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileCard = ({\n  text,\n  image\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: 303,\n        height: 395,\n        backgroundColor: 'F8F9FC',\n        border: \"1px solid black\",\n        borderRadius: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        sx: {\n          height: 140\n        },\n        image: image,\n        title: \"Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n  // return (\n  //     <>\n  //     <div\n  //         onMouseEnter={() => setIsHovered(true)}\n  //         onMouseLeave={() => setIsHovered(false)}\n  //         >\n  //             {!isHovered && (\n  //                 <Card sx={{\n  //                     width: 303,\n  //                     height: 395,\n  //                     backgroundColor: 'F8F9FC',\n  //                     border: \"1px solid black\",\n  //                     borderRadius: 3,\n  //                 }}\n  //         >\n  //             <CardMedia \n  //                 sx={{ \n  //                     height: 140,\n  //                 }}\n  //                 image={image}\n  //                 title=\"Profile Image\"\n  //               />\n  //             <CardContent>\n  //                 <Typography variant=\"body2\" color=\"text.secondary\">\n  //                     {text.split('\\n').map((line, i) => (\n  //                         <React.Fragment key={i}>\n  //                             {line}\n  //                             <br />\n  //                         </React.Fragment>\n  //                     ))}\n  //                 </Typography>\n  //             </CardContent>\n  //         </Card>\n  //             )}\n  //             {isHovered && (\n  //                 <Card sx={{\n  //                     width: 303,\n  //                     height: 395,\n  //                     backgroundColor: 'black',\n  //                     borderRadius: 3,\n  //                 }}\n  //         >\n  //             <CardContent>\n  //                 <Typography variant=\"body2\" color=\"white\">\n  //                     {text.split('\\n').map((line, i) => (\n  //                         <React.Fragment key={i}>\n  //                             {line}\n  //                             <br />\n  //                         </React.Fragment>\n  //                     ))}\n  //                 </Typography>\n  //             </CardContent>\n  //         </Card>\n  //             )}\n  //     </div>\n  //     </>\n  // );\n};\n_s(ProfileCard, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = ProfileCard;\nexport default ProfileCard;\nvar _c;\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"names":["Box","CardMedia","Card","styled","CardContent","Typography","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileCard","text","image","_s","isHovered","setIsHovered","children","sx","width","height","backgroundColor","border","borderRadius","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","split","map","line","i","_c","$RefreshReg$"],"sources":["/Users/emmythamakaison/Documents/ASES-Website/src/components/ProfileCard.jsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport CardMedia from '@mui/material/CardMedia';\nimport Card from '@mui/material/Card';\nimport { styled } from '@mui/material/styles';\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\n\nconst ProfileCard = ({text, image}) => {\n    const [isHovered, setIsHovered] = useState(false);\n    return (\n        <>\n            <Card sx={{\n                width: 303,\n                height: 395,\n                backgroundColor: 'F8F9FC',\n                border: \"1px solid black\",\n                borderRadius: 3,\n            }}\n            >\n                <CardMedia \n                    sx={{ \n                        height: 140,\n                    }}\n                    image={image}\n                    title=\"Profile Image\"\n                  />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                        {text.split('\\n').map((line, i) => (\n                            <React.Fragment key={i}>\n                                {line}\n                                <br />\n                            </React.Fragment>\n                        ))}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </>\n    );\n    // return (\n    //     <>\n    //     <div\n    //         onMouseEnter={() => setIsHovered(true)}\n    //         onMouseLeave={() => setIsHovered(false)}\n    //         >\n    //             {!isHovered && (\n    //                 <Card sx={{\n    //                     width: 303,\n    //                     height: 395,\n    //                     backgroundColor: 'F8F9FC',\n    //                     border: \"1px solid black\",\n    //                     borderRadius: 3,\n    //                 }}\n    //         >\n    //             <CardMedia \n    //                 sx={{ \n    //                     height: 140,\n    //                 }}\n    //                 image={image}\n    //                 title=\"Profile Image\"\n    //               />\n    //             <CardContent>\n    //                 <Typography variant=\"body2\" color=\"text.secondary\">\n    //                     {text.split('\\n').map((line, i) => (\n    //                         <React.Fragment key={i}>\n    //                             {line}\n    //                             <br />\n    //                         </React.Fragment>\n    //                     ))}\n    //                 </Typography>\n    //             </CardContent>\n    //         </Card>\n    //             )}\n    //             {isHovered && (\n    //                 <Card sx={{\n    //                     width: 303,\n    //                     height: 395,\n    //                     backgroundColor: 'black',\n    //                     borderRadius: 3,\n    //                 }}\n    //         >\n    //             <CardContent>\n    //                 <Typography variant=\"body2\" color=\"white\">\n    //                     {text.split('\\n').map((line, i) => (\n    //                         <React.Fragment key={i}>\n    //                             {line}\n    //                             <br />\n    //                         </React.Fragment>\n    //                     ))}\n    //                 </Typography>\n    //             </CardContent>\n    //         </Card>\n    //             )}\n    //     </div>\n    //     </>\n    // );\n};\n\nexport default ProfileCard;\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,WAAW,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,oBACIE,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA,CAACP,IAAI;MAACiB,EAAE,EAAE;QACNC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,eAAe,EAAE,QAAQ;QACzBC,MAAM,EAAE,iBAAiB;QACzBC,YAAY,EAAE;MAClB,CAAE;MAAAN,QAAA,gBAEET,OAAA,CAACR,SAAS;QACNkB,EAAE,EAAE;UACAE,MAAM,EAAE;QACZ,CAAE;QACFP,KAAK,EAAEA,KAAM;QACbW,KAAK,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACJpB,OAAA,CAACL,WAAW;QAAAc,QAAA,eACRT,OAAA,CAACJ,UAAU;UAACyB,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC,gBAAgB;UAAAb,QAAA,EAC7CL,IAAI,CAACmB,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAC1B1B,OAAA,CAACH,KAAK,CAACI,QAAQ;YAAAQ,QAAA,GACVgB,IAAI,eACLzB,OAAA;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GAFWM,CAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGN,CACnB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC,gBACT,CAAC;EAEP;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACd,EAAA,CAzFIH,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2FjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}